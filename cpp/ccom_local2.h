#ifndef _CCOM_LOCAL2_#define _CCOM_LOCAL2_void where( int c );void lineid( int l, char *fn );void eobl2( void );void hopcode( int f, int o );int tlen( NODE *p );int mixtypes( NODE *p, NODE *q );void prtype( NODE *n );void zzzcode( register NODE *p, int c );void rmove( int rt, int rs, int t );void setregs( void );int szty( int t );int rewfld( NODE *p );int callreg( NODE *p );int base( NODE *p );int offset( NODE *p, int tyl );void makeor2( NODE *p, NODE *q, int b, int o );int canaddr( NODE *p );int shltype( int o, NODE *p );int flshape( NODE *p );int shtemp( NODE *p );int shumul( NODE *p );void adrcon( CONSZ val );void conput( NODE *p );void insput( NODE *p );void upput( NODE *p );void adrput( NODE *p );void acon( NODE *p );int genscall( NODE *p, int cookie );int gencall( NODE *p, int cookie );void cbgen( int o, int lab, int mode );int nextcook( NODE *p, int cookie );int lastchance( NODE *p, int cook );void optim2( NODE *p );NODE *addroreg( NODE *l );#ifndef ONEPASSint main( int argc, char *argv[] );#endifvoid hardops( register NODE *p );void zappost( NODE *p );void fixpre( NODE *p );void myreader( NODE *p );#endif /* _CCOM_LOCAL2_ */