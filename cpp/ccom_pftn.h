#ifndef _CCOM_PFTN_#define _CCOM_PFTN_void defid( NODE *q, int class );void psave( int i );void ftnend( void );void dclargs( void );NODE *rstruct( int idn, int soru, int typattr );void moedef( int idn );int bstruct( int idn, int soru, int typattr );NODE *dclstruct( int oparam );void yyerror( char *s );void yyaccpt( void );void ftnarg( int idn );int talign( unsigned int ty, int s);OFFSZ tsize( TWORD ty, int d, int s );void inforce( OFFSZ n );void vfdalign( int n );void beginit( int curid );void instk( int id, TWORD t, int d, int s, OFFSZ off );NODE *getstr( void );void putbyte( int v );void endinit( void );void doinit( NODE *p );void gotscal( void );void ilbrace( void );void irbrace( void );int upoff( int size, int alignment, int *poff );int oalloc( struct symtab *p, int *poff );int falloc( struct symtab *p, int w, int new, NODE *pty );void nidcl( NODE *p );int types( NODE *p, ... );int cvcheck( NODE *p );NODE *tymerge( NODE *typ, NODE *idp );void tyreduce( NODE *p );void fixtype( NODE *p, int class );int uclass( int class );int fixclass( int class, TWORD type );struct symtab *mknonuniq( int *idindex );int lookup( char *name, int s );#ifndef checkstvoid checkst( int lev )#endifstruct symtab *relook( struct symtab *p );void clearst( int lev );void movestab( struct symtab *p, struct symtab *q );int hide( struct symtab *p );void unhide( struct symtab *p );#endif /* _CCOM_PFTN_ */